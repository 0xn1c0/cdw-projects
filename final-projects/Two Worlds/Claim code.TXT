using UnityEngine;
using Thirdweb;
using System.Collections.Generic;
using UnityEngine.UI;



public class Prefab_Writing : MonoBehaviour
{
    
    private const string DROP_ERC20_CONTRACT = "0xf67d5Bdf81314549EFc9Edb4617B3413d056E05f";
    
    private const string DROP_ERC1155_CONTRACT = "0x034A53C5C1B79d00E66756B698ce7D8c53C12e95";
    
    
    
    
    

    public async void MintERC20()
    {
        try
        {
            
            Debugger.Instance.Log("Request Sent", "Pending confirmation...");
            Contract contract = ThirdwebManager.Instance.SDK.GetContract(DROP_ERC20_CONTRACT);
            var result = await contract.ERC20.Claim("10");
            Debugger.Instance.Log("[Claim ERC20] Success", result.ToString());
        
        }
        catch (System.Exception e)
        {
            Debugger.Instance.Log("[Mint ERC20] Error", e.Message);
        }
    }

    
    

    public async void MintERC1155()
    {
        try
        {
            
             var erc20Contract = ThirdwebManager.Instance.SDK.GetContract("0xf67d5Bdf81314549EFc9Edb4617B3413d056E05f");

 
             await erc20Contract.ERC20.SetAllowance("0x034A53C5C1B79d00E66756B698ce7D8c53C12e95", "10");
            
            Debugger.Instance.Log("Request Sent", "Pending confirmation...");
            Contract contract = ThirdwebManager.Instance.SDK.GetContract(DROP_ERC1155_CONTRACT);

            TransactionResult transactionResult = await contract.ERC1155.Claim("0", 1);
            Debugger.Instance.Log("[Claim ERC1155] Successful", transactionResult.ToString());

           if (transactionResult.ToString().Contains("Successful"))
        }   
        
        catch (System.Exception e)
        {
            Debugger.Instance.Log("[Mint ERC1155] Error", e.Message);
        }
    }

    
}
